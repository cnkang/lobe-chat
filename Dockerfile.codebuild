FROM public.ecr.aws/docker/library/node:22-slim AS base

ENV DEBIAN_FRONTEND="noninteractive"

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        ca-certificates \
        proxychains-ng \
    && mkdir -p /distroless/bin /distroless/etc /distroless/etc/ssl/certs /distroless/lib \
    && cp /usr/lib/$(arch)-linux-gnu/libproxychains.so.4 /distroless/lib/libproxychains.so.4 \
    && cp /usr/lib/$(arch)-linux-gnu/libdl.so.2 /distroless/lib/libdl.so.2 \
    && cp /usr/bin/proxychains4 /distroless/bin/proxychains \
    && cp /etc/proxychains4.conf /distroless/etc/proxychains4.conf \
    && cp /usr/lib/$(arch)-linux-gnu/libstdc++.so.6 /distroless/lib/libstdc++.so.6 \
    && cp /usr/lib/$(arch)-linux-gnu/libgcc_s.so.1 /distroless/lib/libgcc_s.so.1 \
    && cp /usr/local/bin/node /distroless/bin/node \
    && cp /etc/ssl/certs/ca-certificates.crt /distroless/etc/ssl/certs/ca-certificates.crt \
    && apt-get purge -y --auto-remove \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

FROM public.ecr.aws/docker/library/busybox:latest AS app

COPY --from=base /distroless/ /

# Copy pre-built standalone app
COPY .next/standalone /app/
COPY .next/static /app/.next/static/
COPY public /app/public/

# Copy server launcher
COPY scripts/serverLauncher/startServer.js /app/startServer.js

RUN addgroup -S -g 1001 nodejs \
    && adduser -D -G nodejs -H -S -h /app -u 1001 nextjs \
    && chown -R nextjs:nodejs /app /etc/proxychains4.conf

FROM scratch

COPY --from=app / /

ENV NODE_ENV="production" \
    NODE_OPTIONS="--dns-result-order=ipv4first --use-openssl-ca" \
    NODE_EXTRA_CA_CERTS="" \
    NODE_TLS_REJECT_UNAUTHORIZED="" \
    SSL_CERT_DIR="/etc/ssl/certs/ca-certificates.crt" \
    MIDDLEWARE_REWRITE_THROUGH_LOCAL="1" \
    HOSTNAME="0.0.0.0" \
    PORT="3210"

USER nextjs

EXPOSE 3210/tcp

# Health check - 使用简单的 TCP 连接检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/bin/node", "-e", "require('net').createConnection(3210, 'localhost').on('connect', () => process.exit(0)).on('error', () => process.exit(1))"]

ENTRYPOINT ["/bin/node"]

CMD ["/app/startServer.js"]