version: 0.2

env:
  variables:
    NODE_ENV: production
    NEXT_TELEMETRY_DISABLED: "1"
    CI: "1"
    AWS_DEFAULT_REGION: us-east-1
    IMAGE_REPO_NAME: lobe-chat
    IMAGE_TAG: latest

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo AWS Account ID is $AWS_ACCOUNT_ID
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH}
      - echo Repository URI is $REPOSITORY_URI
      - echo Image tag is $IMAGE_TAG

  install:
    runtime-versions:
      nodejs: 22.18.0
    commands:
      - set -euxo pipefail
      - |
        if [ ! -x "$HOME/.bun/bin/bun" ]; then
          echo "Installing Bun..."
          curl -fsSL https://bun.sh/install | bash
        fi
      - export BUN_INSTALL="$HOME/.bun"
      - export PATH="$BUN_INSTALL/bin:$PATH"
      - export THREADS="$(nproc)"
      - export OUTPUT_FILE_TRACING_ROOT=$CODEBUILD_SRC_DIR
      - echo "OUTPUT_FILE_TRACING_ROOT=$OUTPUT_FILE_TRACING_ROOT"
      - export TOTAL_MB="$(awk '/MemTotal/ {printf "%.0f", $2/1024}' /proc/meminfo)"
      - export HEAP_MB="$(( TOTAL_MB * 60 / 100 ))"
      - if [ "$HEAP_MB" -lt 8192 ]; then export HEAP_MB=8192; fi
      - if [ "$HEAP_MB" -gt 12288 ]; then export HEAP_MB=12288; fi
      - export NODE_OPTIONS="--max-old-space-size=${HEAP_MB} --max-semi-space-size=256"
      - export BUN_JOBS="${THREADS}"
      - export SWC_THREADS="${THREADS}"
      - if [ -f bun.lockb ]; then bun install --frozen-lockfile --no-progress; else bun install --no-progress; fi

  build:
    commands:
      - echo "Build completed by GitHub Actions. CodeBuild used for deployment artifacts only."

  post_build:
    commands:
      - echo "Creating deployment artifacts..."
      - printf '[{"name":"lobe-chat","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json

artifacts:
  files:
    - .next/standalone/**/*
    - .next/static/**/*
    - public/**/*
    - package.json
    - bun.lockb
    - appspec.yml
    - deploy/**/*
    - imagedefinitions.json
  discard-paths: no

cache:
  paths:
    - '~/.bun/**/*'
    - '.next/cache/**/*'
