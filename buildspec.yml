version: 0.2

env:
  variables:
    NEXT_TELEMETRY_DISABLED: "1"
    CI: "1"
    APP_URL: "https://localhost:3210"

phases:
  install:
    runtime-versions:
      nodejs: 22
    commands:
      - |
          if [ ! -x "$HOME/.bun/bin/bun" ]; then
            echo "Installing Bun..."
            curl -fsSL https://bun.sh/install | bash
          else
            echo "Using cached Bun at $HOME/.bun/bin/bun"
          fi
      - export BUN_INSTALL="$HOME/.bun"
      - export PATH="$BUN_INSTALL/bin:$PATH"

      # 并行与内存：线程 = CPU 核数；堆 = 物理内存 80%，但至少 6144MB
      - export THREADS="$(nproc)"
      - export TOTAL_MB="$(awk '/MemTotal/ {printf "%.0f", $2/1024}' /proc/meminfo)"
      - export HEAP_MB="$(( TOTAL_MB * 80 / 100 ))"
      - if [ "$HEAP_MB" -lt 6144 ]; then export HEAP_MB=6144; fi
      - export NODE_OPTIONS="--max-old-space-size=${HEAP_MB} --max-semi-space-size=256"
      - export BUN_JOBS="${THREADS}"
      - export SWC_THREADS="${THREADS}"
      - 'echo "Node: $(node -v)  Bun: $(bun --version)  THREADS=${THREADS}  TOTAL_MB=${TOTAL_MB}  HEAP_MB=${HEAP_MB}"'

      - echo "Installing dependencies with Bun..."
      - if [ -f bun.lockb ]; then bun install --frozen-lockfile --no-progress; else bun install --no-progress; fi

  build:
    commands:
      - echo "Building with ${THREADS} threads and heap ${HEAP_MB} MB..."
      - time ./scripts/build.sh

artifacts:
  files:
    # deliver the standalone bundle, static assets and deployment scripts
    - .next/standalone/**/*
    - .next/static/**/*
    - public/**/*
    - package.json
    - bun.lockb
    - appspec.yml
    - deploy/**/*
  discard-paths: no

cache:
  paths:
    - '~/.bun/**/*'
    - 'node_modules/**/*'
    - '.next/cache/**/*'
